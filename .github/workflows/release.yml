name: "Tauri Release"

on:
  push:
    tags:
      - "v*" # Se ejecuta al pushear un tag, ej: v1.0.0

jobs:
  build:
    name: Build Tauri App
    strategy:
      fail-fast: false
      matrix:
        platform: [ windows-latest, ubuntu-latest, macos-latest ]

    runs-on: ${{ matrix.platform }}

    steps:
      # 1Ô∏è‚É£ Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Rust
      - name: Setup Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 4Ô∏è‚É£ Cache Rust
      - name: Cache Rust
        uses: swatinem/rust-cache@v2

      # 5Ô∏è‚É£ Dependencias espec√≠ficas por sistema operativo
      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: brew install gtk+3

      # ‚úÖ FIX: Instalaci√≥n robusta de WiX Toolset (Windows)
      - name: Install WiX Toolset (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          echo "üîç Checking if WiX is already installed..."
          $wixDir = (Get-ChildItem "C:\Program Files*" -Directory -Recurse -ErrorAction SilentlyContinue | Where-Object { $_.Name -like "WiX Toolset v3.*" } | Sort-Object Name -Descending | Select-Object -First 1).FullName
          if (-not $wixDir) {
            echo "‚¨áÔ∏è Installing WiX Toolset..."
            choco install wixtoolset --version=3.14.1.20250415 -y
            $wixDir = (Get-ChildItem "C:\Program Files*" -Directory -Recurse -ErrorAction SilentlyContinue | Where-Object { $_.Name -like "WiX Toolset v3.*" } | Sort-Object Name -Descending | Select-Object -First 1).FullName
          }
          
          if (-not (Test-Path $wixDir)) {
            echo "‚ùå WiX installation directory not found."
            exit 1
          }

          $wixBin = Join-Path $wixDir "bin"
          echo "‚úÖ WiX found at: $wixBin"

          # Agregar al PATH y al entorno
          echo "$wixBin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "WIX=$wixBin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          # Verificar binarios
          echo "Checking WiX executables:"
          Get-ChildItem $wixBin
          if (!(Test-Path (Join-Path $wixBin "candle.exe")) -or !(Test-Path (Join-Path $wixBin "light.exe"))) {
            echo "‚ùå WiX executables missing. Installation incomplete."
            exit 1
          } else {
            echo "‚úÖ WiX executables verified."
          }

      # 6Ô∏è‚É£ Instalar dependencias frontend
      - name: Install frontend dependencies
        run: npm ci

      # 7Ô∏è‚É£ Build de la app con Tauri
      - name: Build and bundle Tauri app
        run: npm run tauri build

      # 8Ô∏è‚É£ Subir artefactos (instaladores, binarios, etc.)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/**/*

  # 9Ô∏è‚É£ Crear Release y subir instaladores a GitHub
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            dist/**/*.msi
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.AppImage
            dist/**/*.deb
            dist/**/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
