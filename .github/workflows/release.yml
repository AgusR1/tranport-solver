name: "Tauri Release"

on:
  push:
    tags:
      - "v*" # Se dispara al pushear un tag, ej: v1.0.0

jobs:
  tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: swatinem/rust-cache@v2

      # 4Ô∏è‚É£ Dependencias Linux (GTK / GLib / GObject)
      - name: Install system dependencies (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libglib2.0-dev \
            libgio2.0-dev \
            libgobject-introspection-dev \
            libgtk-3-dev \
            libappindicator3-dev \
            libgdk-pixbuf2.0-dev \
            libsoup2.4-dev \
            librsvg2-dev

      # 5Ô∏è‚É£ Configurar PKG_CONFIG_PATH Linux
      - name: Set PKG_CONFIG_PATH (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          echo "Setting up PKG_CONFIG_PATH..."
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_LIBS=1" >> $GITHUB_ENV

      # 6Ô∏è‚É£ Debug PKG_CONFIG setup
      - name: Verify PKG_CONFIG setup (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "Testing pkg-config for required libraries:"
          pkg-config --exists glib-2.0 && echo "‚úì glib-2.0 found" || echo "‚úó glib-2.0 missing"
          pkg-config --exists gio-2.0 && echo "‚úì gio-2.0 found" || echo "‚úó gio-2.0 missing"
          pkg-config --exists gobject-2.0 && echo "‚úì gobject-2.0 found" || echo "‚úó gobject-2.0 missing"
          echo "Available .pc files in PKG_CONFIG_PATH:"
          find /usr/lib/x86_64-linux-gnu/pkgconfig /usr/share/pkgconfig /usr/lib/pkgconfig -name "*.pc" 2>/dev/null | grep -E "(glib|gio|gobject)" | head -10

      # 7Ô∏è‚É£ Instalar dependencias frontend
      - name: Install frontend dependencies
        run: npm install

      # 7Ô∏è‚É£ Build y bundle con Tauri
      - name: Build and bundle app with Tauri
        run: npm run tauri build
        env:
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: 1
          PKG_CONFIG_ALLOW_SYSTEM_LIBS: 1
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}

      # 8Ô∏è‚É£ Debug artifacts Windows
      - name: List Windows bundle
        if: matrix.platform == 'windows-latest'
        run: |
          echo "Listing entire bundle directory structure:"
          if exist src-tauri\target\release\bundle (
            dir /s src-tauri\target\release\bundle
          ) else (
            echo "Bundle directory does not exist"
          )

      # 9Ô∏è‚É£ Subir artifacts Windows
      - name: Upload Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-installers
          path: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe
        continue-on-error: true

      # üîü Debug artifacts Linux
      - name: List Linux bundle
        if: matrix.platform == 'ubuntu-latest'
        run: |
          echo "Listing entire bundle directory structure:"
          if [ -d "src-tauri/target/release/bundle" ]; then
            ls -laR src-tauri/target/release/bundle
          else
            echo "Bundle directory does not exist"
          fi

      # 1Ô∏è‚É£1Ô∏è‚É£ Subir artifacts Linux
      - name: Upload Linux artifacts
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-installers
          path: |
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.AppImage
        continue-on-error: true
